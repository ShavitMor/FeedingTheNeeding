# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5433:5432 # Maps GitHub's port 5433 to container's 5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: FeedingTheNeedingTests
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5433; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
      - name: Run Tests with Maven
        run: mvn -B test -Pcoverage
      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
         name: jacoco-report
         path: target/site/jacoco/
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
           generate-branches-badge: true
           generate-summary: true
      # - name: log coverage to output
      #   run: |
      #     echo "Coverage: $(cat target/site/jacoco/index.html | grep -oP 'span class="ctr[^>]+>\K[^<]+')"
      - name: Generate Coverage Summary
        run: |
          java -jar jacoco-parser.jar target/site/jacoco/jacoco.xml > coverage-summary.md

      - name: Display Coverage in Workflow
        run: cat coverage-summary.md
