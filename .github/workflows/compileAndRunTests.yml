name: Java CI with Maven

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5433:5432 # Maps GitHub's port 5433 to container's 5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: FeedingTheNeedingTests
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Step 3: Wait for PostgreSQL to be ready (if applicable)
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5433; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      # Step 4: Run tests with Maven and generate JaCoCo reports
      - name: Run Tests with Maven
        run: mvn clean verify

      # Step 5: Upload the JaCoCo coverage reports
      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-reports
          path: target/site/jacoco/

      # Step 6: Display coverage summary
      - name: Display Coverage Summaries
        run: |
          echo "Coverage Reports for Modules:"
          for report in $(ls target/site/jacoco/*-coverage.xml); do
            echo "Processing $report..."
            java -jar jacoco-parser.jar $report >> coverage-summary.md
          done
          cat coverage-summary.md
